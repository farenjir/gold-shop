name: CD

on:
  push:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

jobs:
  # Deploy gold-shop app
  deploy-gold-shop:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Restore Nx cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.nx/cache
            .nx/cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/nx.json', '**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Build gold-shop for production
        run: npx nx build @gold-shop/gold-shop --configuration=production

      - name: Export gold-shop static files
        run: npx nx export @gold-shop/gold-shop

      # Example deployment to Vercel
      - name: Deploy to Vercel (gold-shop)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_GOLD_SHOP_PROJECT_ID }}
          working-directory: ./dist/apps/gold-shop
          scope: ${{ secrets.VERCEL_ORG_ID }}

      # Alternative: Deploy to GitHub Pages
      - name: Deploy gold-shop to GitHub Pages
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist/apps/gold-shop/out
          destination_dir: gold-shop

  # Deploy gold-admin app
  deploy-gold-admin:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Restore Nx cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.nx/cache
            .nx/cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/nx.json', '**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Build gold-admin for production
        run: npx nx build @gold-shop/gold-admin --configuration=production

      - name: Export gold-admin static files
        run: npx nx export @gold-shop/gold-admin

      # Example deployment to Vercel
      - name: Deploy to Vercel (gold-admin)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_GOLD_ADMIN_PROJECT_ID }}
          working-directory: ./dist/apps/gold-admin
          scope: ${{ secrets.VERCEL_ORG_ID }}

      # Alternative: Deploy to GitHub Pages
      - name: Deploy gold-admin to GitHub Pages
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist/apps/gold-admin/out
          destination_dir: gold-admin

  # Docker deployment (alternative)
  deploy-docker:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push gold-shop Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/gold-shop/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/gold-shop:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/gold-shop:latest

      - name: Build and push gold-admin Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/gold-admin/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/gold-admin:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/gold-admin:latest

  # Notify deployment status
  notify:
    runs-on: ubuntu-latest
    needs: [deploy-gold-shop, deploy-gold-admin]
    if: always()
    steps:
      - name: Notify deployment status
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
